[package]
name = "secmem-proc"
version = "0.3.5"
authors = ["niluxv <niluxv.opensource.C-h2ty6xl@yandex.com>"]
edition = "2021"
license = "MIT OR Apache-2.0"
description = "Process hardening through system APIs"
readme = "README.md"
categories = ["no-std", "cryptography", "os"]
keywords = ["secure", "memory", "process", "hardening"]
repository = "https://github.com/niluxv/secmem-proc"
include = ["src/**/*", "COPYING", "LICENSE.*", "README.md"]
rust-version = "1.65"

[package.metadata.docs.rs]
all-features = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["std"]
# enable functionality requiring std; note that on Windows we always depend on std transitively via the windows crate
std = ["dep:thiserror", "anyhow/std", "rustix/std", "dep:rustix-linux-procfs"]
# enable anti-tracing techniques using unstable/undocumented APIs/OS implementation details
unstable = ["windows/Wdk_System_Threading"]
# required features to run tests; additional features enable more tests
dev = []

[dependencies]
anyhow = { version = "1.0", default-features = false }
cfg-if = "1.0"
thiserror = { version = "2.0", optional = true }

[target.'cfg(unix)'.dependencies]
rustix = { version = "1.0", default-features = false, features = ["process"] }

[target.'cfg(target_os = "linux")'.dependencies]
rustix-linux-procfs = { version = "0.1.0", optional = true }

[target.'cfg(target_os = "macos")'.dependencies]
libc = "0.2.107"

[target.'cfg(windows)'.dependencies]
windows = { version = "0.58", features = ["Win32_Foundation", "Win32_Security", "Win32_System_Threading", "Win32_Security_Authorization", "Win32_System_Diagnostics_Debug"] }

[dev-dependencies]
assert_cmd = "2.0"
escargot = "0.5"
predicates = "3.0"
once_cell = "1.16"
